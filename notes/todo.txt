updates operations, left to do:
    need to do some data validation to check if i didnt insert wrong data somehow

    speed up the process as its slow af



notes regarding the management of lines already in db (bu could need update)

    exception throwned for constraint violation (unicity):
        Doctrine\DBAL\Exception\UniqueConstraintViolationException

    WARNING
        the exception is actually thrown when flushing
        flush on every line is pretty bad for sqlite
        but checking if the line exists requiere doubling the amont of requests

    notes:
        looping overs cards is pretty long
        sqlite manage better large commit
        if card's depencidencies are deleted, FK (on the card and anywhere else) must be setup to do nothing (or at least set th FK field to null if possible?)

    solutions and obvious drawbacks:
        looping over data and upsert:
            one request to check if the line exists, if so update data else insert
        on a transaction, delete all lines and then insert data
            gonna lock tables for pretty long time
            FK constraints might break somewhere
        delete then insert data step by step for each entity
            during the process, data going to be inconsistent
        inserting fresh data into working tables, when all done, replace to real tables
            that seems painfull technically speaking
            high cost for the storage and I/O operations
            batch processing is not the strong suit of doctrine

    difficulties
        targetting dynamically entities managed by doctrine is pretty easy
                x->getName() for x in $this->entityManager->getMetadataFactory()->getAllMetadata()
                then build delete with DQL or else
            but targetting join tables auto generated by doctrine is doable but it does not seems to be usable with DQL
            so either looping other each line and deleting each relation => lame performances
            either plain sql deletes, but thats might not be fully portable across the diferents sql platforms
        upsert is kinda difficult to implement
            retrieving PK of entity is possible
            but there's no way to get getters and setters from the property name
            and there should be special treatment for associations mapping, which is going to be really hard
        delete everything and reload:
            is data is manullay added on the scryfall tables (eg description of a keywoard), data will be lost
            so i would need to save this data somewhere and includes them on inserts, thats not very elegant
            this problem is gonna grow bigger if translations are added
    
    random ideas
        on update process, send notification to the users, informing them the site is currently beeing updated
